{"version":3,"sources":["vendor/lodash/modularize/_SetCache.js"],"names":["SetCache","values","index","length","__data__","MapCache","add","prototype","push","setCacheAdd","has","setCacheHas"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,QAAT,CAAkBC,MAAlB,EAA0B;AACxB,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASF,UAAU,IAAV,GAAiB,CAAjB,GAAqBA,OAAOE,MADzC;;AAGA,OAAKC,QAAL,GAAgB,IAAIC,kBAAJ,EAAhB;AACA,SAAO,EAAEH,KAAF,GAAUC,MAAjB,EAAyB;AACvB,SAAKG,GAAL,CAASL,OAAOC,KAAP,CAAT;AACD;AACF;;AAED;AACAF,SAASO,SAAT,CAAmBD,GAAnB,GAAyBN,SAASO,SAAT,CAAmBC,IAAnB,GAA0BC,qBAAnD;AACAT,SAASO,SAAT,CAAmBG,GAAnB,GAAyBC,qBAAzB;;kBAEeX,Q","file":"vendor/lodash/modularize/_SetCache.js","sourcesContent":["import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n"],"sourceRoot":"../../../../../../src/js"}