{"version":3,"sources":["vendor/lodash/modularize/assign.js"],"names":["objectProto","Object","prototype","hasOwnProperty","assign","object","source","key","call"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAfA;;;;;;;;AAgBA,IAAIA,cAAcC,OAAOC,SAAzB;;AAEA;AACA,IAAIC,iBAAiBH,YAAYG,cAAjC;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIC,SAAS,8BAAe,UAASC,MAAT,EAAiBC,MAAjB,EAAyB;AACnD,MAAI,2BAAYA,MAAZ,KAAuB,2BAAYA,MAAZ,CAA3B,EAAgD;AAC9C,8BAAWA,MAAX,EAAmB,oBAAKA,MAAL,CAAnB,EAAiCD,MAAjC;AACA;AACD;AACD,OAAK,IAAIE,GAAT,IAAgBD,MAAhB,EAAwB;AACtB,QAAIH,eAAeK,IAAf,CAAoBF,MAApB,EAA4BC,GAA5B,CAAJ,EAAsC;AACpC,iCAAYF,MAAZ,EAAoBE,GAApB,EAAyBD,OAAOC,GAAP,CAAzB;AACD;AACF;AACF,CAVY,CAAb;;kBAYeH,M","file":"vendor/lodash/modularize/assign.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n"],"sourceRoot":"../../../../../../src/js"}