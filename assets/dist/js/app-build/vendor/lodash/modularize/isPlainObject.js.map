{"version":3,"sources":["vendor/lodash/modularize/isPlainObject.js"],"names":["objectTag","funcProto","Function","prototype","objectProto","Object","funcToString","toString","hasOwnProperty","objectCtorString","call","isPlainObject","value","proto","Ctor","constructor"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,YAAY,iBAAhB;;AAEA;AAfA;;;;;;;;AAgBA,IAAIC,YAAYC,SAASC,SAAzB;AAAA,IACIC,cAAcC,OAAOF,SADzB;;AAGA;AACA,IAAIG,eAAeL,UAAUM,QAA7B;;AAEA;AACA,IAAIC,iBAAiBJ,YAAYI,cAAjC;;AAEA;AACA,IAAIC,mBAAmBH,aAAaI,IAAb,CAAkBL,MAAlB,CAAvB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAASM,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,MAAI,CAAC,4BAAaA,KAAb,CAAD,IAAwB,0BAAWA,KAAX,KAAqBZ,SAAjD,EAA4D;AAC1D,WAAO,KAAP;AACD;AACD,MAAIa,QAAQ,4BAAaD,KAAb,CAAZ;AACA,MAAIC,UAAU,IAAd,EAAoB;AAClB,WAAO,IAAP;AACD;AACD,MAAIC,OAAON,eAAeE,IAAf,CAAoBG,KAApB,EAA2B,aAA3B,KAA6CA,MAAME,WAA9D;AACA,SAAO,OAAOD,IAAP,IAAe,UAAf,IAA6BA,gBAAgBA,IAA7C,IACLR,aAAaI,IAAb,CAAkBI,IAAlB,KAA2BL,gBAD7B;AAED;;kBAEcE,a","file":"vendor/lodash/modularize/isPlainObject.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n"],"sourceRoot":"../../../../../../src/js"}