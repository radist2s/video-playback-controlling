{"version":3,"sources":["vendor/lodash/modularize/flatMapDeep.js"],"names":["INFINITY","flatMapDeep","collection","iteratee"],"mappings":";;;;;;AAQA;;;;AACA;;;;;;AAEA;AAXA;;;;;;;;AAYA,IAAIA,WAAW,IAAI,CAAnB;;AAEA;;;;;;;;;;;;;;;;;;;;AAoBA,SAASC,WAAT,CAAqBC,UAArB,EAAiCC,QAAjC,EAA2C;AACzC,SAAO,2BAAY,mBAAID,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuCH,QAAvC,CAAP;AACD;;kBAEcC,W","file":"vendor/lodash/modularize/flatMapDeep.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDeep([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMapDeep(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), INFINITY);\n}\n\nexport default flatMapDeep;\n"],"sourceRoot":"../../../../../../src/js"}