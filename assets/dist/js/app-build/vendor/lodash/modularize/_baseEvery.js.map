{"version":3,"sources":["vendor/lodash/modularize/_baseEvery.js"],"names":["baseEvery","collection","predicate","result","value","index"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;AASA,SAASA,SAAT,CAAmBC,UAAnB,EAA+BC,SAA/B,EAA0C;AACxC,MAAIC,SAAS,IAAb;AACA,0BAASF,UAAT,EAAqB,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;AACtDE,aAAS,CAAC,CAACD,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBJ,UAAxB,CAAX;AACA,WAAOE,MAAP;AACD,GAHD;AAIA,SAAOA,MAAP;AACD;;kBAEcH,S","file":"vendor/lodash/modularize/_baseEvery.js","sourcesContent":["import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n"],"sourceRoot":"../../../../../../src/js"}