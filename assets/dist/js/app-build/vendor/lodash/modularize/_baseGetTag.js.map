{"version":3,"sources":["vendor/lodash/modularize/_baseGetTag.js"],"names":["nullTag","undefinedTag","symToStringTag","Symbol","toStringTag","undefined","baseGetTag","value","Object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,UAAU,eAAd;AAAA,IACIC,eAAe,oBADnB;;AAGA;AACA,IAAIC,iBAAiBC,mBAASA,iBAAOC,WAAhB,GAA8BC,SAAnD;;AAEA;;;;;;;AAOA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAIA,SAAS,IAAb,EAAmB;AACjB,WAAOA,UAAUF,SAAV,GAAsBJ,YAAtB,GAAqCD,OAA5C;AACD;AACD,SAAQE,kBAAkBA,kBAAkBM,OAAOD,KAAP,CAArC,GACH,yBAAUA,KAAV,CADG,GAEH,8BAAeA,KAAf,CAFJ;AAGD;;kBAEcD,U","file":"vendor/lodash/modularize/_baseGetTag.js","sourcesContent":["import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n"],"sourceRoot":"../../../../../../src/js"}