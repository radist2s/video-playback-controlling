{"version":3,"sources":["vendor/lodash/modularize/_baseGet.js"],"names":["baseGet","object","path","index","length","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+B;AAC7BA,SAAO,wBAASA,IAAT,EAAeD,MAAf,CAAP;;AAEA,MAAIE,QAAQ,CAAZ;AAAA,MACIC,SAASF,KAAKE,MADlB;;AAGA,SAAOH,UAAU,IAAV,IAAkBE,QAAQC,MAAjC,EAAyC;AACvCH,aAASA,OAAO,qBAAMC,KAAKC,OAAL,CAAN,CAAP,CAAT;AACD;AACD,SAAQA,SAASA,SAASC,MAAnB,GAA6BH,MAA7B,GAAsCI,SAA7C;AACD;;kBAEcL,O","file":"vendor/lodash/modularize/_baseGet.js","sourcesContent":["import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n"],"sourceRoot":"../../../../../../src/js"}