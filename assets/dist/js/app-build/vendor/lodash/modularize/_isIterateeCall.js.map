{"version":3,"sources":["vendor/lodash/modularize/_isIterateeCall.js"],"names":["isIterateeCall","value","index","object","type","length"],"mappings":";;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,cAAT,CAAwBC,KAAxB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC5C,MAAI,CAAC,wBAASA,MAAT,CAAL,EAAuB;AACrB,WAAO,KAAP;AACD;AACD,MAAIC,cAAcF,KAAd,yCAAcA,KAAd,CAAJ;AACA,MAAIE,QAAQ,QAAR,GACK,2BAAYD,MAAZ,KAAuB,uBAAQD,KAAR,EAAeC,OAAOE,MAAtB,CAD5B,GAEKD,QAAQ,QAAR,IAAoBF,SAASC,MAFtC,EAGM;AACJ,WAAO,kBAAGA,OAAOD,KAAP,CAAH,EAAkBD,KAAlB,CAAP;AACD;AACD,SAAO,KAAP;AACD;;kBAEcD,c","file":"vendor/lodash/modularize/_isIterateeCall.js","sourcesContent":["import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n"],"sourceRoot":"../../../../../../src/js"}