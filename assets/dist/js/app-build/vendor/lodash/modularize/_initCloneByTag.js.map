{"version":3,"sources":["vendor/lodash/modularize/_initCloneByTag.js"],"names":["boolTag","dateTag","mapTag","numberTag","regexpTag","setTag","stringTag","symbolTag","arrayBufferTag","dataViewTag","float32Tag","float64Tag","int8Tag","int16Tag","int32Tag","uint8Tag","uint8ClampedTag","uint16Tag","uint32Tag","initCloneByTag","object","tag","cloneFunc","isDeep","Ctor","constructor"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,UAAU,kBAAd;AAAA,IACIC,UAAU,eADd;AAAA,IAEIC,SAAS,cAFb;AAAA,IAGIC,YAAY,iBAHhB;AAAA,IAIIC,YAAY,iBAJhB;AAAA,IAKIC,SAAS,cALb;AAAA,IAMIC,YAAY,iBANhB;AAAA,IAOIC,YAAY,iBAPhB;;AASA,IAAIC,iBAAiB,sBAArB;AAAA,IACIC,cAAc,mBADlB;AAAA,IAEIC,aAAa,uBAFjB;AAAA,IAGIC,aAAa,uBAHjB;AAAA,IAIIC,UAAU,oBAJd;AAAA,IAKIC,WAAW,qBALf;AAAA,IAMIC,WAAW,qBANf;AAAA,IAOIC,WAAW,qBAPf;AAAA,IAQIC,kBAAkB,4BARtB;AAAA,IASIC,YAAY,sBAThB;AAAA,IAUIC,YAAY,sBAVhB;;AAYA;;;;;;;;;;;;;AAaA,SAASC,cAAT,CAAwBC,MAAxB,EAAgCC,GAAhC,EAAqCC,SAArC,EAAgDC,MAAhD,EAAwD;AACtD,MAAIC,OAAOJ,OAAOK,WAAlB;AACA,UAAQJ,GAAR;AACE,SAAKb,cAAL;AACE,aAAO,gCAAiBY,MAAjB,CAAP;;AAEF,SAAKpB,OAAL;AACA,SAAKC,OAAL;AACE,aAAO,IAAIuB,IAAJ,CAAS,CAACJ,MAAV,CAAP;;AAEF,SAAKX,WAAL;AACE,aAAO,6BAAcW,MAAd,EAAsBG,MAAtB,CAAP;;AAEF,SAAKb,UAAL,CAAiB,KAAKC,UAAL;AACjB,SAAKC,OAAL,CAAc,KAAKC,QAAL,CAAe,KAAKC,QAAL;AAC7B,SAAKC,QAAL,CAAe,KAAKC,eAAL,CAAsB,KAAKC,SAAL,CAAgB,KAAKC,SAAL;AACnD,aAAO,+BAAgBE,MAAhB,EAAwBG,MAAxB,CAAP;;AAEF,SAAKrB,MAAL;AACE,aAAO,wBAASkB,MAAT,EAAiBG,MAAjB,EAAyBD,SAAzB,CAAP;;AAEF,SAAKnB,SAAL;AACA,SAAKG,SAAL;AACE,aAAO,IAAIkB,IAAJ,CAASJ,MAAT,CAAP;;AAEF,SAAKhB,SAAL;AACE,aAAO,2BAAYgB,MAAZ,CAAP;;AAEF,SAAKf,MAAL;AACE,aAAO,wBAASe,MAAT,EAAiBG,MAAjB,EAAyBD,SAAzB,CAAP;;AAEF,SAAKf,SAAL;AACE,aAAO,2BAAYa,MAAZ,CAAP;AA9BJ;AAgCD;;kBAEcD,c","file":"vendor/lodash/modularize/_initCloneByTag.js","sourcesContent":["import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneMap from './_cloneMap.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSet from './_cloneSet.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {Function} cloneFunc The function to clone values.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, cloneFunc, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return cloneMap(object, isDeep, cloneFunc);\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return cloneSet(object, isDeep, cloneFunc);\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n"],"sourceRoot":"../../../../../../src/js"}