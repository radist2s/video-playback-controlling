{"version":3,"sources":["vendor/lodash/modularize/flatMapDepth.js"],"names":["flatMapDepth","collection","iteratee","depth","undefined"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAqBA,SAASA,YAAT,CAAsBC,UAAtB,EAAkCC,QAAlC,EAA4CC,KAA5C,EAAmD;AACjDA,UAAQA,UAAUC,SAAV,GAAsB,CAAtB,GAA0B,yBAAUD,KAAV,CAAlC;AACA,SAAO,2BAAY,mBAAIF,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuCC,KAAvC,CAAP;AACD,C,CApCD;;;;;;;;kBAsCeH,Y","file":"vendor/lodash/modularize/flatMapDepth.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\nimport toInteger from './toInteger.js';\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */\nfunction flatMapDepth(collection, iteratee, depth) {\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(map(collection, iteratee), depth);\n}\n\nexport default flatMapDepth;\n"],"sourceRoot":"../../../../../../src/js"}