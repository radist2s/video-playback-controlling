{"version":3,"sources":["vendor/lodash/modularize/split.js"],"names":["MAX_ARRAY_LENGTH","split","string","separator","limit","undefined"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,mBAAmB,UAAvB;;AAEA;;;;;;;;;;;;;;;;;;;AAnBA;;;;;;;;AAsCA,SAASC,KAAT,CAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,EAAyC;AACvC,MAAIA,SAAS,OAAOA,KAAP,IAAgB,QAAzB,IAAqC,8BAAeF,MAAf,EAAuBC,SAAvB,EAAkCC,KAAlC,CAAzC,EAAmF;AACjFD,gBAAYC,QAAQC,SAApB;AACD;AACDD,UAAQA,UAAUC,SAAV,GAAsBL,gBAAtB,GAAyCI,UAAU,CAA3D;AACA,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;AACDF,WAAS,wBAASA,MAAT,CAAT;AACA,MAAIA,WACE,OAAOC,SAAP,IAAoB,QAApB,IACCA,aAAa,IAAb,IAAqB,CAAC,wBAASA,SAAT,CAFzB,CAAJ,EAGO;AACLA,gBAAY,4BAAaA,SAAb,CAAZ;AACA,QAAI,CAACA,SAAD,IAAc,0BAAWD,MAAX,CAAlB,EAAsC;AACpC,aAAO,yBAAU,6BAAcA,MAAd,CAAV,EAAiC,CAAjC,EAAoCE,KAApC,CAAP;AACD;AACF;AACD,SAAOF,OAAOD,KAAP,CAAaE,SAAb,EAAwBC,KAAxB,CAAP;AACD;;kBAEcH,K","file":"vendor/lodash/modularize/split.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport isRegExp from './isRegExp.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Splits `string` by `separator`.\n *\n * **Note:** This method is based on\n * [`String#split`](https://mdn.io/String/split).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} separator The separator pattern to split by.\n * @param {number} [limit] The length to truncate results to.\n * @returns {Array} Returns the string segments.\n * @example\n *\n * _.split('a-b-c', '-', 2);\n * // => ['a', 'b']\n */\nfunction split(string, separator, limit) {\n  if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n    separator = limit = undefined;\n  }\n  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n  if (!limit) {\n    return [];\n  }\n  string = toString(string);\n  if (string && (\n        typeof separator == 'string' ||\n        (separator != null && !isRegExp(separator))\n      )) {\n    separator = baseToString(separator);\n    if (!separator && hasUnicode(string)) {\n      return castSlice(stringToArray(string), 0, limit);\n    }\n  }\n  return string.split(separator, limit);\n}\n\nexport default split;\n"],"sourceRoot":"../../../../../../src/js"}