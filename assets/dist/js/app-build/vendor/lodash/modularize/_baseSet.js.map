{"version":3,"sources":["vendor/lodash/modularize/_baseSet.js"],"names":["baseSet","object","path","value","customizer","index","length","lastIndex","nested","key","newValue","objValue","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,OAAT,CAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,KAA/B,EAAsCC,UAAtC,EAAkD;AAChD,MAAI,CAAC,wBAASH,MAAT,CAAL,EAAuB;AACrB,WAAOA,MAAP;AACD;AACDC,SAAO,wBAASA,IAAT,EAAeD,MAAf,CAAP;;AAEA,MAAII,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASJ,KAAKI,MADlB;AAAA,MAEIC,YAAYD,SAAS,CAFzB;AAAA,MAGIE,SAASP,MAHb;;AAKA,SAAOO,UAAU,IAAV,IAAkB,EAAEH,KAAF,GAAUC,MAAnC,EAA2C;AACzC,QAAIG,MAAM,qBAAMP,KAAKG,KAAL,CAAN,CAAV;AAAA,QACIK,WAAWP,KADf;;AAGA,QAAIE,SAASE,SAAb,EAAwB;AACtB,UAAII,WAAWH,OAAOC,GAAP,CAAf;AACAC,iBAAWN,aAAaA,WAAWO,QAAX,EAAqBF,GAArB,EAA0BD,MAA1B,CAAb,GAAiDI,SAA5D;AACA,UAAIF,aAAaE,SAAjB,EAA4B;AAC1BF,mBAAW,wBAASC,QAAT,IACPA,QADO,GAEN,uBAAQT,KAAKG,QAAQ,CAAb,CAAR,IAA2B,EAA3B,GAAgC,EAFrC;AAGD;AACF;AACD,+BAAYG,MAAZ,EAAoBC,GAApB,EAAyBC,QAAzB;AACAF,aAASA,OAAOC,GAAP,CAAT;AACD;AACD,SAAOR,MAAP;AACD;;kBAEcD,O","file":"vendor/lodash/modularize/_baseSet.js","sourcesContent":["import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n"],"sourceRoot":"../../../../../../src/js"}