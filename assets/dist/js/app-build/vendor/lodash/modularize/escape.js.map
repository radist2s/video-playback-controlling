{"version":3,"sources":["vendor/lodash/modularize/escape.js"],"names":["reUnescapedHtml","reHasUnescapedHtml","RegExp","source","escape","string","test","replace","escapeHtmlChar"],"mappings":";;;;;;AAQA;;;;AACA;;;;;;AAEA;AAXA;;;;;;;;AAYA,IAAIA,kBAAkB,UAAtB;AAAA,IACIC,qBAAqBC,OAAOF,gBAAgBG,MAAvB,CADzB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA,SAASC,MAAT,CAAgBC,MAAhB,EAAwB;AACtBA,WAAS,wBAASA,MAAT,CAAT;AACA,SAAQA,UAAUJ,mBAAmBK,IAAnB,CAAwBD,MAAxB,CAAX,GACHA,OAAOE,OAAP,CAAeP,eAAf,EAAgCQ,wBAAhC,CADG,GAEHH,MAFJ;AAGD;;kBAEcD,M","file":"vendor/lodash/modularize/escape.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport escapeHtmlChar from './_escapeHtmlChar.js';\nimport toString from './toString.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"']/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nexport default escape;\n"],"sourceRoot":"../../../../../../src/js"}