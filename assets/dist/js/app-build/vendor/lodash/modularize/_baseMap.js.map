{"version":3,"sources":["vendor/lodash/modularize/_baseMap.js"],"names":["baseMap","collection","iteratee","index","result","Array","length","value","key"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,OAAT,CAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC;AACrC,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAAS,2BAAYH,UAAZ,IAA0BI,MAAMJ,WAAWK,MAAjB,CAA1B,GAAqD,EADlE;;AAGA,0BAASL,UAAT,EAAqB,UAASM,KAAT,EAAgBC,GAAhB,EAAqBP,UAArB,EAAiC;AACpDG,WAAO,EAAED,KAAT,IAAkBD,SAASK,KAAT,EAAgBC,GAAhB,EAAqBP,UAArB,CAAlB;AACD,GAFD;AAGA,SAAOG,MAAP;AACD;;kBAEcJ,O","file":"vendor/lodash/modularize/_baseMap.js","sourcesContent":["import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n"],"sourceRoot":"../../../../../../src/js"}