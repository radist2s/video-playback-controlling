{"version":3,"sources":["vendor/lodash/modularize/defer.js"],"names":["defer","func","args"],"mappings":";;;;;;AAQA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;AAXA;;;;;;;;AA6BA,IAAIA,QAAQ,wBAAS,UAASC,IAAT,EAAeC,IAAf,EAAqB;AACxC,SAAO,yBAAUD,IAAV,EAAgB,CAAhB,EAAmBC,IAAnB,CAAP;AACD,CAFW,CAAZ;;kBAIeF,K","file":"vendor/lodash/modularize/defer.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseDelay from './_baseDelay.js';\nimport baseRest from './_baseRest.js';\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */\nvar defer = baseRest(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nexport default defer;\n"],"sourceRoot":"../../../../../../src/js"}