{"version":3,"sources":["vendor/lodash/modularize/_createCurry.js"],"names":["createCurry","func","bitmask","arity","Ctor","wrapper","length","arguments","args","Array","index","placeholder","holders","createHybrid","undefined","fn","root"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;AASA,SAASA,WAAT,CAAqBC,IAArB,EAA2BC,OAA3B,EAAoCC,KAApC,EAA2C;AACzC,MAAIC,OAAO,0BAAWH,IAAX,CAAX;;AAEA,WAASI,OAAT,GAAmB;AACjB,QAAIC,SAASC,UAAUD,MAAvB;AAAA,QACIE,OAAOC,MAAMH,MAAN,CADX;AAAA,QAEII,QAAQJ,MAFZ;AAAA,QAGIK,cAAc,yBAAUN,OAAV,CAHlB;;AAKA,WAAOK,OAAP,EAAgB;AACdF,WAAKE,KAAL,IAAcH,UAAUG,KAAV,CAAd;AACD;AACD,QAAIE,UAAWN,SAAS,CAAT,IAAcE,KAAK,CAAL,MAAYG,WAA1B,IAAyCH,KAAKF,SAAS,CAAd,MAAqBK,WAA/D,GACV,EADU,GAEV,8BAAeH,IAAf,EAAqBG,WAArB,CAFJ;;AAIAL,cAAUM,QAAQN,MAAlB;AACA,QAAIA,SAASH,KAAb,EAAoB;AAClB,aAAO,6BACLF,IADK,EACCC,OADD,EACUW,sBADV,EACwBR,QAAQM,WADhC,EAC6CG,SAD7C,EAELN,IAFK,EAECI,OAFD,EAEUE,SAFV,EAEqBA,SAFrB,EAEgCX,QAAQG,MAFxC,CAAP;AAGD;AACD,QAAIS,KAAM,QAAQ,SAASC,cAAjB,IAAyB,gBAAgBX,OAA1C,GAAqDD,IAArD,GAA4DH,IAArE;AACA,WAAO,qBAAMc,EAAN,EAAU,IAAV,EAAgBP,IAAhB,CAAP;AACD;AACD,SAAOH,OAAP;AACD;;kBAEcL,W","file":"vendor/lodash/modularize/_createCurry.js","sourcesContent":["import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n"],"sourceRoot":"../../../../../../src/js"}