{"version":3,"sources":["vendor/lodash/modularize/overArgs.js"],"names":["nativeMin","Math","min","overArgs","func","transforms","length","baseIteratee","funcsLength","args","index","call"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAjBA;;;;;;;;AAkBA,IAAIA,YAAYC,KAAKC,GAArB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+BA,IAAIC,WAAW,wBAAS,UAASC,IAAT,EAAeC,UAAf,EAA2B;AACjDA,eAAcA,WAAWC,MAAX,IAAqB,CAArB,IAA0B,uBAAQD,WAAW,CAAX,CAAR,CAA3B,GACT,wBAASA,WAAW,CAAX,CAAT,EAAwB,yBAAUE,sBAAV,CAAxB,CADS,GAET,wBAAS,2BAAYF,UAAZ,EAAwB,CAAxB,CAAT,EAAqC,yBAAUE,sBAAV,CAArC,CAFJ;;AAIA,MAAIC,cAAcH,WAAWC,MAA7B;AACA,SAAO,wBAAS,UAASG,IAAT,EAAe;AAC7B,QAAIC,QAAQ,CAAC,CAAb;AAAA,QACIJ,SAASN,UAAUS,KAAKH,MAAf,EAAuBE,WAAvB,CADb;;AAGA,WAAO,EAAEE,KAAF,GAAUJ,MAAjB,EAAyB;AACvBG,WAAKC,KAAL,IAAcL,WAAWK,KAAX,EAAkBC,IAAlB,CAAuB,IAAvB,EAA6BF,KAAKC,KAAL,CAA7B,CAAd;AACD;AACD,WAAO,qBAAMN,IAAN,EAAY,IAAZ,EAAkBK,IAAlB,CAAP;AACD,GARM,CAAP;AASD,CAfc,CAAf;;kBAiBeN,Q","file":"vendor/lodash/modularize/overArgs.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport castRest from './_castRest.js';\nimport isArray from './isArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nexport default overArgs;\n"],"sourceRoot":"../../../../../../src/js"}