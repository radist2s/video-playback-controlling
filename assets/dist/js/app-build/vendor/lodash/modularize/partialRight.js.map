{"version":3,"sources":["vendor/lodash/modularize/partialRight.js"],"names":["WRAP_PARTIAL_RIGHT_FLAG","partialRight","func","partials","holders","undefined","placeholder"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAbA;;;;;;;;AAcA,IAAIA,0BAA0B,EAA9B;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgCA,IAAIC,eAAe,wBAAS,UAASC,IAAT,EAAeC,QAAf,EAAyB;AACnD,MAAIC,UAAU,8BAAeD,QAAf,EAAyB,yBAAUF,YAAV,CAAzB,CAAd;AACA,SAAO,0BAAWC,IAAX,EAAiBF,uBAAjB,EAA0CK,SAA1C,EAAqDF,QAArD,EAA+DC,OAA/D,CAAP;AACD,CAHkB,CAAnB;;AAKA;AACAH,aAAaK,WAAb,GAA2B,EAA3B;;kBAEeL,Y","file":"vendor/lodash/modularize/partialRight.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */\nvar partialRight = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partialRight));\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartialRight.placeholder = {};\n\nexport default partialRight;\n"],"sourceRoot":"../../../../../../src/js"}