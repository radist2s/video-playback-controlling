{"version":3,"sources":["vendor/lodash/modularize/_assignMergeValue.js"],"names":["assignMergeValue","object","key","value","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;;;AAEA;;;;;;;;;AASA,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,GAAlC,EAAuCC,KAAvC,EAA8C;AAC5C,MAAKA,UAAUC,SAAV,IAAuB,CAAC,kBAAGH,OAAOC,GAAP,CAAH,EAAgBC,KAAhB,CAAzB,IACCA,UAAUC,SAAV,IAAuB,EAAEF,OAAOD,MAAT,CAD5B,EAC+C;AAC7C,mCAAgBA,MAAhB,EAAwBC,GAAxB,EAA6BC,KAA7B;AACD;AACF;;kBAEcH,gB","file":"vendor/lodash/modularize/_assignMergeValue.js","sourcesContent":["import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n"],"sourceRoot":"../../../../../../src/js"}