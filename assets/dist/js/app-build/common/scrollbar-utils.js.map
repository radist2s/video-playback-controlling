{"version":3,"sources":["common/scrollbar-utils.ts"],"names":[],"mappings":";;;;IAEA;QACI,IAAI,cAAc,KAAK,SAAS,EAAE;YAC9B,OAAO,cAAc,CAAA;SACxB;QAED,IAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAErD,cAAc,CAAC,KAAK,CAAC,KAAK,GAAG,MAAM,CAAA;QACnC,cAAc,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAA;QACpC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,SAAS,CAAA;QACzC,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,UAAU,CAAA;QAC1C,cAAc,CAAC,KAAK,CAAC,UAAU,GAAG,QAAQ,CAAA;QAE1C,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAA;QAEzC,IAAM,qBAAqB,GAAG,cAAc,CAAC,WAAW,CAAC;QAEzD,cAAc,CAAC,KAAK,CAAC,QAAQ,GAAG,QAAQ,CAAA;QAExC,IAAM,kBAAkB,GAAG,cAAc,CAAC,WAAW,CAAC;QAEtD,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,CAAA;QAEzC,OAAO,cAAc,GAAG,qBAAqB,GAAG,kBAAkB,CAAA;IACtE,CAAC;;IAED,2BAAkC,IAAW;QACzC,OAAO,SAAS,CAAC,IAAI,EAAE,UAAU,CAAC,CAAA;IACtC,CAAC;;IAED,6BAAoC,IAAW;QAC3C,OAAO,SAAS,CAAC,IAAI,EAAE,YAAY,CAAC,CAAA;IACxC,CAAC;;IAED,mBAAmB,IAAW,EAAE,IAAa;QACzC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC,EAAE,CAAA;QAE7C,IAAM,CAAC,GAAG,GAAG,EACT,CAAC,GAAG,GAAG,CAAC;QAEZ,QAAQ,IAAI,EAAE;YACV,KAAK,YAAY,CAAC;YAClB,KAAK,GAAG;gBACJ,IAAI,GAAG,CAAC,CAAA;gBACR,MAAK;YACT;gBACI,IAAI,GAAG,CAAC,CAAA;gBACR,MAAK;SACZ;QAED,IAAM,eAAe,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,EACvE,YAAY,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC,WAAW,EACrD,cAAc,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,EAC5D,cAAc,GAAG,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC,aAAa,CAAC;QAEjE,IAAI,CAAC,IAAI,EAAE;YACP,IAAI,eAAe,EAAE;gBACjB,IAAM,QAAQ,GAAG,gBAAgB,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC,YAAY,CAAC,CAAC;gBAE1E,OAAO,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,eAAe,IAAI,QAAQ,KAAK,QAAQ,CAAA;aAClF;iBACI;gBACD,OAAO,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC;oBAC3C,QAAQ,CAAC,eAAe,CAAC,cAAc,CAAC;oBACxC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,GAAG,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAA;aACpE;SACJ;aACI;YACD,OAAO,IAAI,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,CAAA;SACrD;IACL,CAAC;;;;QAAA,CAAC","file":"common/scrollbar-utils.js","sourcesContent":["let scrollBarWidth;\n\nexport function getScrollBarWidth() {\n    if (scrollBarWidth !== undefined) {\n        return scrollBarWidth\n    }\n\n    const scrollDetector = document.createElement('div');\n\n    scrollDetector.style.width = '50px'\n    scrollDetector.style.height = '50px'\n    scrollDetector.style.overflow = 'visible'\n    scrollDetector.style.position = 'absolute'\n    scrollDetector.style.visibility = 'hidden'\n\n    document.body.appendChild(scrollDetector)\n\n    const widthWithoutScrollBar = scrollDetector.clientWidth;\n\n    scrollDetector.style.overflow = 'scroll'\n\n    const widthWithScrollBar = scrollDetector.clientWidth;\n\n    document.body.removeChild(scrollDetector)\n\n    return scrollBarWidth = widthWithoutScrollBar - widthWithScrollBar\n}\n\nexport function hasVerticalScroll(node?: Node) {\n    return hasScroll(node, 'vertical')\n}\n\nexport function hasHorizontalScroll(node?: Node) {\n    return hasScroll(node, 'horizontal')\n}\n\nfunction hasScroll(node?: Node, axis?: string) {\n    axis = axis ? String(axis).toLowerCase() : ''\n\n    const X = 'x',\n        Y = 'y';\n\n    switch (axis) {\n        case 'horizontal':\n        case 'x':\n            axis = X\n            break\n        default:\n            axis = Y\n            break\n    }\n\n    const windowInnerSize = axis === Y ? window.innerHeight : window.innerWidth,\n        overflowProp = axis === Y ? 'overflowY' : 'overflowX',\n        offsetSizeProp = axis === Y ? 'offsetHeight' : 'offsetWidth',\n        scrollSizeProp = axis === Y ? 'scrollHeight' : 'scrollWidth';\n\n    if (!node) {\n        if (windowInnerSize) {\n            const overflow = getComputedStyle(document.documentElement)[overflowProp];\n\n            return document.body[offsetSizeProp] > windowInnerSize || overflow === 'scroll'\n        }\n        else {\n            return document.documentElement[scrollSizeProp] >\n                document.documentElement[offsetSizeProp] ||\n                document.body[scrollSizeProp] > document.body[offsetSizeProp]\n        }\n    }\n    else {\n        return node[scrollSizeProp] > node[offsetSizeProp]\n    }\n}"],"sourceRoot":"../../../../src/ts"}