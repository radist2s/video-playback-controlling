{"version":3,"sources":["vendor/lodash/modularize/_createRelationalOperation.js"],"names":["createRelationalOperation","operator","value","other"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;AAOA,SAASA,yBAAT,CAAmCC,QAAnC,EAA6C;AAC3C,SAAO,UAASC,KAAT,EAAgBC,KAAhB,EAAuB;AAC5B,QAAI,EAAE,OAAOD,KAAP,IAAgB,QAAhB,IAA4B,OAAOC,KAAP,IAAgB,QAA9C,CAAJ,EAA6D;AAC3DD,cAAQ,wBAASA,KAAT,CAAR;AACAC,cAAQ,wBAASA,KAAT,CAAR;AACD;AACD,WAAOF,SAASC,KAAT,EAAgBC,KAAhB,CAAP;AACD,GAND;AAOD;;kBAEcH,yB","file":"vendor/lodash/modularize/_createRelationalOperation.js","sourcesContent":["import toNumber from './toNumber.js';\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nexport default createRelationalOperation;\n"],"sourceRoot":"../../../../../../src/js"}