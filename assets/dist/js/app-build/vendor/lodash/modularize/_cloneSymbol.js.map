{"version":3,"sources":["vendor/lodash/modularize/_cloneSymbol.js"],"names":["symbolProto","Symbol","prototype","undefined","symbolValueOf","valueOf","cloneSymbol","symbol","Object","call"],"mappings":";;;;;;AAAA;;;;;;AAEA;AACA,IAAIA,cAAcC,mBAASA,iBAAOC,SAAhB,GAA4BC,SAA9C;AAAA,IACIC,gBAAgBJ,cAAcA,YAAYK,OAA1B,GAAoCF,SADxD;;AAGA;;;;;;;AAOA,SAASG,WAAT,CAAqBC,MAArB,EAA6B;AAC3B,SAAOH,gBAAgBI,OAAOJ,cAAcK,IAAd,CAAmBF,MAAnB,CAAP,CAAhB,GAAqD,EAA5D;AACD;;kBAEcD,W","file":"vendor/lodash/modularize/_cloneSymbol.js","sourcesContent":["import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n"],"sourceRoot":"../../../../../../src/js"}