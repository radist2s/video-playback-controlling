{"version":3,"sources":["vendor/lodash/modularize/delay.js"],"names":["delay","func","wait","args"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;AAmBA,IAAIA,QAAQ,wBAAS,UAASC,IAAT,EAAeC,IAAf,EAAqBC,IAArB,EAA2B;AAC9C,SAAO,yBAAUF,IAAV,EAAgB,wBAASC,IAAT,KAAkB,CAAlC,EAAqCC,IAArC,CAAP;AACD,CAFW,CAAZ,C,CA/BA;;;;;;;;kBAmCeH,K","file":"vendor/lodash/modularize/delay.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseDelay from './_baseDelay.js';\nimport baseRest from './_baseRest.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */\nvar delay = baseRest(function(func, wait, args) {\n  return baseDelay(func, toNumber(wait) || 0, args);\n});\n\nexport default delay;\n"],"sourceRoot":"../../../../../../src/js"}