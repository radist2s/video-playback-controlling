{"version":3,"sources":["views/main.ts"],"names":[],"mappings":"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","file":"views/main.js","sourcesContent":["import * as Backbone from 'backbone'\n\nexport default class MainView extends Backbone.View<Backbone.Model> {\n    el: HTMLElement\n    private mainVideoNode: HTMLVideoElement\n    private videoReadyPromise: Promise<any>\n    private videoStepsTotal: number\n    private playbackFrame: number\n\n    events() {\n        return {\n            'change [name=playback]': 'onInputPlaybackChange'\n        }\n    }\n\n    initialize() {\n        this.model = new Backbone.Model({\n            videoState: parseInt((this.el.querySelector('[name=playback]:checked') as HTMLInputElement).value)\n        })\n\n        this.mainVideoNode = this.el.querySelector('#mainVideo') as HTMLVideoElement\n\n        this.videoReadyPromise = new Promise((resolve) => {\n            this.videoReadPromiseAttach().then(resolve)\n        })\n\n        this.videoStepsTotal = this.el.querySelectorAll('[name=playback]').length\n\n        this.listenTo(this.model, 'change:videoState', this.onVideoStateChange)\n    }\n\n    async videoReadPromiseAttach() {\n        if (this.mainVideoNode.readyState >= this.mainVideoNode.HAVE_ENOUGH_DATA) {\n            return true\n        }\n        else {\n            const canPlayPromise = new Promise((resolve) => {\n                const canPlayThrough = () => {\n                    this.mainVideoNode.removeEventListener('canplaythrough', canPlayThrough)\n\n                    resolve()\n                }\n\n                this.mainVideoNode.addEventListener('canplaythrough', canPlayThrough)\n\n                const videoPreloader = new XMLHttpRequest()\n                videoPreloader.open('GET', this.mainVideoNode.currentSrc)\n                videoPreloader.responseType = 'blob'\n\n                videoPreloader.onload = (request) => {\n                    if (videoPreloader.status !== 200) {\n                        return\n                    }\n\n                    this.mainVideoNode.preload = 'auto'\n                }\n\n                videoPreloader.send()\n            })\n\n            return canPlayPromise\n        }\n    }\n\n    onInputPlaybackChange(e: Event) {\n        const inputNode = (e.delegateTarget || e.currentTarget) as HTMLInputElement\n\n        this.model.set({\n            videoState: parseInt(inputNode.value)\n        })\n    }\n\n    private async onVideoStateChange() {\n        const videoState = this.model.get('videoState')\n\n        this.videoReadyPromise.then(this.setVideoPositionStep.bind(this, videoState))\n    }\n\n    private setVideoPositionStep(videoState) {\n        const durationPerState = this.mainVideoNode.duration / (this.videoStepsTotal - 1)\n\n        this.playVideo(durationPerState, videoState)\n    }\n\n    private playVideo(durationPerState, videoState) {\n        if (this.playbackFrame) {\n            cancelAnimationFrame(this.playbackFrame)\n        }\n\n        durationPerState = durationPerState * 1000\n\n        const currentVideoTime = this.mainVideoNode.currentTime * 1000\n        const currentVideoState = Math.ceil(currentVideoTime / durationPerState)\n\n        const videoStartTime = currentVideoTime\n\n        const videoEndTime = durationPerState * videoState\n\n        const playbackStartTime = Date.now()\n\n        const playbackDuration = Math.min(Math.abs(videoEndTime - videoStartTime), durationPerState)\n\n        const playbackLoop = () => {\n            const timeElapsed = Date.now() - playbackStartTime\n\n            const completed = Math.min(timeElapsed / playbackDuration, 1)\n\n            if (completed < 1) {\n                const easingFactor = this.animationEasing(completed, playbackDuration * completed, 0, 1, playbackDuration)\n\n                const currentVideoTimeEased = (videoEndTime - videoStartTime) * easingFactor + videoStartTime\n\n                this.mainVideoNode.currentTime = currentVideoTimeEased / 1000\n\n                this.playbackFrame = requestAnimationFrame(playbackLoop)\n            }\n            else {\n                this.mainVideoNode.currentTime = videoEndTime / 1000\n            }\n        }\n\n        this.playbackFrame = requestAnimationFrame(playbackLoop)\n    }\n\n    /**\n     * easeOutSine\n     *\n     * @param x\n     * @param t\n     * @param b\n     * @param c\n     * @param d\n     * @return {any}\n     */\n    private animationEasing(x, t, b, c, d) {\n        return c * Math.sin(t / d * (Math.PI / 2)) + b\n    }\n}\n\nMainView.prototype.el = <HTMLElement><any>'#root'"],"sourceRoot":"../../../../src/ts"}