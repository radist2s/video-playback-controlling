{"version":3,"sources":["vendor/lodash/modularize/size.js"],"names":["mapTag","setTag","size","collection","length","tag"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,SAAS,cAAb;AAAA,IACIC,SAAS,cADb;;AAGA;;;;;;;;;;;;;;;;;;;;;AAlBA;;;;;;;;AAuCA,SAASC,IAAT,CAAcC,UAAd,EAA0B;AACxB,MAAIA,cAAc,IAAlB,EAAwB;AACtB,WAAO,CAAP;AACD;AACD,MAAI,2BAAYA,UAAZ,CAAJ,EAA6B;AAC3B,WAAO,wBAASA,UAAT,IAAuB,0BAAWA,UAAX,CAAvB,GAAgDA,WAAWC,MAAlE;AACD;AACD,MAAIC,MAAM,sBAAOF,UAAP,CAAV;AACA,MAAIE,OAAOL,MAAP,IAAiBK,OAAOJ,MAA5B,EAAoC;AAClC,WAAOE,WAAWD,IAAlB;AACD;AACD,SAAO,wBAASC,UAAT,EAAqBC,MAA5B;AACD;;kBAEcF,I","file":"vendor/lodash/modularize/size.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport stringSize from './_stringSize.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nexport default size;\n"],"sourceRoot":"../../../../../../src/js"}