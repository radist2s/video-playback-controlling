{"version":3,"sources":["vendor/lodash/modularize/bind.js"],"names":["WRAP_BIND_FLAG","WRAP_PARTIAL_FLAG","bind","func","thisArg","partials","bitmask","length","holders","placeholder"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAbA;;;;;;;;AAcA,IAAIA,iBAAiB,CAArB;AAAA,IACIC,oBAAoB,EADxB;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCA,IAAIC,OAAO,wBAAS,UAASC,IAAT,EAAeC,OAAf,EAAwBC,QAAxB,EAAkC;AACpD,MAAIC,UAAUN,cAAd;AACA,MAAIK,SAASE,MAAb,EAAqB;AACnB,QAAIC,UAAU,8BAAeH,QAAf,EAAyB,yBAAUH,IAAV,CAAzB,CAAd;AACAI,eAAWL,iBAAX;AACD;AACD,SAAO,0BAAWE,IAAX,EAAiBG,OAAjB,EAA0BF,OAA1B,EAAmCC,QAAnC,EAA6CG,OAA7C,CAAP;AACD,CAPU,CAAX;;AASA;AACAN,KAAKO,WAAL,GAAmB,EAAnB;;kBAEeP,I","file":"vendor/lodash/modularize/bind.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nexport default bind;\n"],"sourceRoot":"../../../../../../src/js"}