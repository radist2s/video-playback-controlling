{"version":3,"sources":["vendor/lodash/modularize/_baseMerge.js"],"names":["baseMerge","object","source","srcIndex","customizer","stack","srcValue","key","Stack","newValue","undefined","keysIn"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;;AAWA,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,MAA3B,EAAmCC,QAAnC,EAA6CC,UAA7C,EAAyDC,KAAzD,EAAgE;AAC9D,MAAIJ,WAAWC,MAAf,EAAuB;AACrB;AACD;AACD,yBAAQA,MAAR,EAAgB,UAASI,QAAT,EAAmBC,GAAnB,EAAwB;AACtC,QAAI,wBAASD,QAAT,CAAJ,EAAwB;AACtBD,gBAAUA,QAAQ,IAAIG,eAAJ,EAAlB;AACA,mCAAcP,MAAd,EAAsBC,MAAtB,EAA8BK,GAA9B,EAAmCJ,QAAnC,EAA6CH,SAA7C,EAAwDI,UAAxD,EAAoEC,KAApE;AACD,KAHD,MAIK;AACH,UAAII,WAAWL,aACXA,WAAWH,OAAOM,GAAP,CAAX,EAAwBD,QAAxB,EAAmCC,MAAM,EAAzC,EAA8CN,MAA9C,EAAsDC,MAAtD,EAA8DG,KAA9D,CADW,GAEXK,SAFJ;;AAIA,UAAID,aAAaC,SAAjB,EAA4B;AAC1BD,mBAAWH,QAAX;AACD;AACD,sCAAiBL,MAAjB,EAAyBM,GAAzB,EAA8BE,QAA9B;AACD;AACF,GAfD,EAeGE,gBAfH;AAgBD;;kBAEcX,S","file":"vendor/lodash/modularize/_baseMerge.js","sourcesContent":["import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    if (isObject(srcValue)) {\n      stack || (stack = new Stack);\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(object[key], srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n"],"sourceRoot":"../../../../../../src/js"}