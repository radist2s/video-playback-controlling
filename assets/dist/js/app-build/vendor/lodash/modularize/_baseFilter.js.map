{"version":3,"sources":["vendor/lodash/modularize/_baseFilter.js"],"names":["baseFilter","collection","predicate","result","value","index","push"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;AAQA,SAASA,UAAT,CAAoBC,UAApB,EAAgCC,SAAhC,EAA2C;AACzC,MAAIC,SAAS,EAAb;AACA,0BAASF,UAAT,EAAqB,UAASG,KAAT,EAAgBC,KAAhB,EAAuBJ,UAAvB,EAAmC;AACtD,QAAIC,UAAUE,KAAV,EAAiBC,KAAjB,EAAwBJ,UAAxB,CAAJ,EAAyC;AACvCE,aAAOG,IAAP,CAAYF,KAAZ;AACD;AACF,GAJD;AAKA,SAAOD,MAAP;AACD;;kBAEcH,U","file":"vendor/lodash/modularize/_baseFilter.js","sourcesContent":["import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n"],"sourceRoot":"../../../../../../src/js"}