{"version":3,"sources":["vendor/lodash/modularize/_mapCacheSet.js"],"names":["mapCacheSet","key","value","data","size","set"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;;AAUA,SAASA,WAAT,CAAqBC,GAArB,EAA0BC,KAA1B,EAAiC;AAC/B,MAAIC,OAAO,0BAAW,IAAX,EAAiBF,GAAjB,CAAX;AAAA,MACIG,OAAOD,KAAKC,IADhB;;AAGAD,OAAKE,GAAL,CAASJ,GAAT,EAAcC,KAAd;AACA,OAAKE,IAAL,IAAaD,KAAKC,IAAL,IAAaA,IAAb,GAAoB,CAApB,GAAwB,CAArC;AACA,SAAO,IAAP;AACD;;kBAEcJ,W","file":"vendor/lodash/modularize/_mapCacheSet.js","sourcesContent":["import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n"],"sourceRoot":"../../../../../../src/js"}