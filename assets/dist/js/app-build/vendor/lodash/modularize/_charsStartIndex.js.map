{"version":3,"sources":["vendor/lodash/modularize/_charsStartIndex.js"],"names":["charsStartIndex","strSymbols","chrSymbols","index","length"],"mappings":";;;;;;AAAA;;;;;;AAEA;;;;;;;;;AASA,SAASA,eAAT,CAAyBC,UAAzB,EAAqCC,UAArC,EAAiD;AAC/C,MAAIC,QAAQ,CAAC,CAAb;AAAA,MACIC,SAASH,WAAWG,MADxB;;AAGA,SAAO,EAAED,KAAF,GAAUC,MAAV,IAAoB,2BAAYF,UAAZ,EAAwBD,WAAWE,KAAX,CAAxB,EAA2C,CAA3C,IAAgD,CAAC,CAA5E,EAA+E,CAAE;AACjF,SAAOA,KAAP;AACD;;kBAEcH,e","file":"vendor/lodash/modularize/_charsStartIndex.js","sourcesContent":["import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nexport default charsStartIndex;\n"],"sourceRoot":"../../../../../../src/js"}