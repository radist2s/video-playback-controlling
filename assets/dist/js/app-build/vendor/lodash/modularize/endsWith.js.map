{"version":3,"sources":["vendor/lodash/modularize/endsWith.js"],"names":["endsWith","string","target","position","length","undefined","end","slice"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAbA;;;;;;;;AAoCA,SAASA,QAAT,CAAkBC,MAAlB,EAA0BC,MAA1B,EAAkCC,QAAlC,EAA4C;AAC1CF,WAAS,wBAASA,MAAT,CAAT;AACAC,WAAS,4BAAaA,MAAb,CAAT;;AAEA,MAAIE,SAASH,OAAOG,MAApB;AACAD,aAAWA,aAAaE,SAAb,GACPD,MADO,GAEP,yBAAU,yBAAUD,QAAV,CAAV,EAA+B,CAA/B,EAAkCC,MAAlC,CAFJ;;AAIA,MAAIE,MAAMH,QAAV;AACAA,cAAYD,OAAOE,MAAnB;AACA,SAAOD,YAAY,CAAZ,IAAiBF,OAAOM,KAAP,CAAaJ,QAAb,EAAuBG,GAAvB,KAA+BJ,MAAvD;AACD;;kBAEcF,Q","file":"vendor/lodash/modularize/endsWith.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseClamp from './_baseClamp.js';\nimport baseToString from './_baseToString.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nexport default endsWith;\n"],"sourceRoot":"../../../../../../src/js"}