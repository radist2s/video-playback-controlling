{"version":3,"sources":["common/images-loaded.ts"],"names":[],"mappings":"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","file":"common/images-loaded.js","sourcesContent":["/**\n * Using: define([images-loaded], imagesLoaded => imagesLoaded(document.querySelectorAll('img')))\n */\nconst imgClasses: any[] = [HTMLImageElement]\n\nlet imgElementsListTags = ['img']\n\nif (typeof HTMLPictureElement !== String(undefined)) {\n    imgClasses.push(HTMLPictureElement)\n    imgElementsListTags.push('picture')\n}\n\nconst imgElementsList = imgElementsListTags.join()\n\nfunction isAlreadyLoadedImage(img) {\n    if (!img.complete) {\n        return false\n    }\n\n    return !!img.naturalWidth\n}\n\nfunction isBrokenImage(img) {\n    return img.complete && !img.naturalWidth\n}\n\nfunction onLoad(resolve) {\n    resolve(this)\n}\n\nfunction onError(reject) {\n    reject(this)\n}\n\nfunction offEvents(imgListenerLoad, imgListenerError) {\n    this.removeEventListener('load', imgListenerLoad)\n    this.removeEventListener('error', imgListenerError)\n}\n\nfunction isImage(element) {\n    return imgClasses.some(function (imgClass) {\n        return element instanceof imgClass\n    })\n}\n\nexport default function imagesLoaded(node) {\n    if (!node) {\n        return Promise.all([])\n    }\n\n    if (window['jQuery'] && node instanceof window['jQuery'] || (window['Zepto'] && window['Zepto'].zepto.Z === node.constructor)) {\n        node = node.get()\n    }\n\n    if (node.length === undefined) {\n        node = [node]\n    }\n\n    const promises = [];\n\n    Array.prototype.forEach.call(node, function (img) {\n        if (!isImage(img)) {\n            return promises.push(imagesLoaded(img.querySelectorAll(imgElementsList)))\n        }\n\n        let imgListenerLoad,\n            imgListenerError;\n\n        const promise = new Promise(function (resolve, reject) {\n            if (isAlreadyLoadedImage(img)) {\n                return resolve(img)\n            }\n\n            if (isBrokenImage(img)) {\n                return reject(img)\n            }\n\n            img.addEventListener('load', imgListenerLoad = onLoad.bind(img, resolve))\n            img.addEventListener('error', imgListenerError = onError.bind(img, reject))\n        });\n\n        const undelegate = offEvents.bind(img, imgListenerLoad, imgListenerError);\n\n        promise.then(undelegate, undelegate)\n\n        promises.push(promise)\n    })\n\n    return Promise.all(promises)\n}"],"sourceRoot":"../../../../src/ts"}