{"version":3,"sources":["vendor/lodash/modularize/_createCaseFirst.js"],"names":["createCaseFirst","methodName","string","strSymbols","undefined","chr","charAt","trailing","join","slice"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;AAOA,SAASA,eAAT,CAAyBC,UAAzB,EAAqC;AACnC,SAAO,UAASC,MAAT,EAAiB;AACtBA,aAAS,wBAASA,MAAT,CAAT;;AAEA,QAAIC,aAAa,0BAAWD,MAAX,IACb,6BAAcA,MAAd,CADa,GAEbE,SAFJ;;AAIA,QAAIC,MAAMF,aACNA,WAAW,CAAX,CADM,GAEND,OAAOI,MAAP,CAAc,CAAd,CAFJ;;AAIA,QAAIC,WAAWJ,aACX,yBAAUA,UAAV,EAAsB,CAAtB,EAAyBK,IAAzB,CAA8B,EAA9B,CADW,GAEXN,OAAOO,KAAP,CAAa,CAAb,CAFJ;;AAIA,WAAOJ,IAAIJ,UAAJ,MAAoBM,QAA3B;AACD,GAhBD;AAiBD;;kBAEcP,e","file":"vendor/lodash/modularize/_createCaseFirst.js","sourcesContent":["import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n"],"sourceRoot":"../../../../../../src/js"}