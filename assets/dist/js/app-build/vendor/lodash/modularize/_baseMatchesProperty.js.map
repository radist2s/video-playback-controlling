{"version":3,"sources":["vendor/lodash/modularize/_baseMatchesProperty.js"],"names":["COMPARE_PARTIAL_FLAG","COMPARE_UNORDERED_FLAG","baseMatchesProperty","path","srcValue","object","objValue","undefined"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAIA,uBAAuB,CAA3B;AAAA,IACIC,yBAAyB,CAD7B;;AAGA;;;;;;;;AAQA,SAASC,mBAAT,CAA6BC,IAA7B,EAAmCC,QAAnC,EAA6C;AAC3C,MAAI,qBAAMD,IAAN,KAAe,kCAAmBC,QAAnB,CAAnB,EAAiD;AAC/C,WAAO,uCAAwB,qBAAMD,IAAN,CAAxB,EAAqCC,QAArC,CAAP;AACD;AACD,SAAO,UAASC,MAAT,EAAiB;AACtB,QAAIC,WAAW,mBAAID,MAAJ,EAAYF,IAAZ,CAAf;AACA,WAAQG,aAAaC,SAAb,IAA0BD,aAAaF,QAAxC,GACH,qBAAMC,MAAN,EAAcF,IAAd,CADG,GAEH,2BAAYC,QAAZ,EAAsBE,QAAtB,EAAgCN,uBAAuBC,sBAAvD,CAFJ;AAGD,GALD;AAMD;;kBAEcC,mB","file":"vendor/lodash/modularize/_baseMatchesProperty.js","sourcesContent":["import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n"],"sourceRoot":"../../../../../../src/js"}