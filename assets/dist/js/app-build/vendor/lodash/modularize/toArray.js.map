{"version":3,"sources":["vendor/lodash/modularize/toArray.js"],"names":["mapTag","setTag","symIterator","Symbol","iterator","undefined","toArray","value","tag","func","mapToArray","setToArray","values"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAnBA;;;;;;;;AAoBA,IAAIA,SAAS,cAAb;AAAA,IACIC,SAAS,cADb;;AAGA;AACA,IAAIC,cAAcC,mBAASA,iBAAOC,QAAhB,GAA2BC,SAA7C;;AAEA;;;;;;;;;;;;;;;;;;;;;;;AAuBA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AACtB,MAAI,CAACA,KAAL,EAAY;AACV,WAAO,EAAP;AACD;AACD,MAAI,2BAAYA,KAAZ,CAAJ,EAAwB;AACtB,WAAO,wBAASA,KAAT,IAAkB,6BAAcA,KAAd,CAAlB,GAAyC,yBAAUA,KAAV,CAAhD;AACD;AACD,MAAIL,eAAeK,MAAML,WAAN,CAAnB,EAAuC;AACrC,WAAO,+BAAgBK,MAAML,WAAN,GAAhB,CAAP;AACD;AACD,MAAIM,MAAM,sBAAOD,KAAP,CAAV;AAAA,MACIE,OAAOD,OAAOR,MAAP,GAAgBU,oBAAhB,GAA8BF,OAAOP,MAAP,GAAgBU,oBAAhB,GAA6BC,gBADtE;;AAGA,SAAOH,KAAKF,KAAL,CAAP;AACD;;kBAEcD,O","file":"vendor/lodash/modularize/toArray.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport Symbol from './_Symbol.js';\nimport copyArray from './_copyArray.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport iteratorToArray from './_iteratorToArray.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\nimport stringToArray from './_stringToArray.js';\nimport values from './values.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nexport default toArray;\n"],"sourceRoot":"../../../../../../src/js"}