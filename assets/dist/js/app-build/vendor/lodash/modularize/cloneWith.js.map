{"version":3,"sources":["vendor/lodash/modularize/cloneWith.js"],"names":["CLONE_SYMBOLS_FLAG","cloneWith","value","customizer","undefined"],"mappings":";;;;;;AAQA;;;;;;AAEA;AACA,IAAIA,qBAAqB,CAAzB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbA;;;;;;;;AA4CA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,UAA1B,EAAsC;AACpCA,eAAa,OAAOA,UAAP,IAAqB,UAArB,GAAkCA,UAAlC,GAA+CC,SAA5D;AACA,SAAO,yBAAUF,KAAV,EAAiBF,kBAAjB,EAAqCG,UAArC,CAAP;AACD;;kBAEcF,S","file":"vendor/lodash/modularize/cloneWith.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it accepts `customizer` which\n * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n * cloning is handled by the method instead. The `customizer` is invoked with\n * up to four arguments; (value [, index|key, object, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeepWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * }\n *\n * var el = _.cloneWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 0\n */\nfunction cloneWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneWith;\n"],"sourceRoot":"../../../../../../src/js"}