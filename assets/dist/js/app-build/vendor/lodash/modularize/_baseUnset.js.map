{"version":3,"sources":["vendor/lodash/modularize/_baseUnset.js"],"names":["baseUnset","object","path"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,SAAT,CAAmBC,MAAnB,EAA2BC,IAA3B,EAAiC;AAC/BA,SAAO,wBAASA,IAAT,EAAeD,MAAf,CAAP;AACAA,WAAS,sBAAOA,MAAP,EAAeC,IAAf,CAAT;AACA,SAAOD,UAAU,IAAV,IAAkB,OAAOA,OAAO,qBAAM,oBAAKC,IAAL,CAAN,CAAP,CAAhC;AACD;;kBAEcF,S","file":"vendor/lodash/modularize/_baseUnset.js","sourcesContent":["import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n"],"sourceRoot":"../../../../../../src/js"}