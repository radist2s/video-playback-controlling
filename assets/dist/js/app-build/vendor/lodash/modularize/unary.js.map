{"version":3,"sources":["vendor/lodash/modularize/unary.js"],"names":["unary","func"],"mappings":";;;;;;AAQA;;;;;;AAEA;;;;;;;;;;;;;;;AAeA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACnB,SAAO,mBAAIA,IAAJ,EAAU,CAAV,CAAP;AACD,C,CA3BD;;;;;;;;kBA6BeD,K","file":"vendor/lodash/modularize/unary.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport ary from './ary.js';\n\n/**\n * Creates a function that accepts up to one argument, ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.unary(parseInt));\n * // => [6, 8, 10]\n */\nfunction unary(func) {\n  return ary(func, 1);\n}\n\nexport default unary;\n"],"sourceRoot":"../../../../../../src/js"}