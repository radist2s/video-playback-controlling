{"version":3,"sources":["vendor/lodash/modularize/_castPath.js"],"names":["castPath","value","object"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,QAAT,CAAkBC,KAAlB,EAAyBC,MAAzB,EAAiC;AAC/B,MAAI,uBAAQD,KAAR,CAAJ,EAAoB;AAClB,WAAOA,KAAP;AACD;AACD,SAAO,qBAAMA,KAAN,EAAaC,MAAb,IAAuB,CAACD,KAAD,CAAvB,GAAiC,4BAAa,wBAASA,KAAT,CAAb,CAAxC;AACD;;kBAEcD,Q","file":"vendor/lodash/modularize/_castPath.js","sourcesContent":["import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n"],"sourceRoot":"../../../../../../src/js"}