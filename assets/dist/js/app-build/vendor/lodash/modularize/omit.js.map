{"version":3,"sources":["vendor/lodash/modularize/omit.js"],"names":["CLONE_DEEP_FLAG","CLONE_FLAT_FLAG","CLONE_SYMBOLS_FLAG","omit","object","paths","result","isDeep","path","length","customOmitClone"],"mappings":";;;;;;AAQA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AAjBA;;;;;;;;AAkBA,IAAIA,kBAAkB,CAAtB;AAAA,IACIC,kBAAkB,CADtB;AAAA,IAEIC,qBAAqB,CAFzB;;AAIA;;;;;;;;;;;;;;;;;;;;AAoBA,IAAIC,OAAO,wBAAS,UAASC,MAAT,EAAiBC,KAAjB,EAAwB;AAC1C,MAAIC,SAAS,EAAb;AACA,MAAIF,UAAU,IAAd,EAAoB;AAClB,WAAOE,MAAP;AACD;AACD,MAAIC,SAAS,KAAb;AACAF,UAAQ,wBAASA,KAAT,EAAgB,UAASG,IAAT,EAAe;AACrCA,WAAO,wBAASA,IAAT,EAAeJ,MAAf,CAAP;AACAG,eAAWA,SAASC,KAAKC,MAAL,GAAc,CAAlC;AACA,WAAOD,IAAP;AACD,GAJO,CAAR;AAKA,4BAAWJ,MAAX,EAAmB,4BAAaA,MAAb,CAAnB,EAAyCE,MAAzC;AACA,MAAIC,MAAJ,EAAY;AACVD,aAAS,yBAAUA,MAAV,EAAkBN,kBAAkBC,eAAlB,GAAoCC,kBAAtD,EAA0EQ,yBAA1E,CAAT;AACD;AACD,MAAID,SAASJ,MAAMI,MAAnB;AACA,SAAOA,QAAP,EAAiB;AACf,6BAAUH,MAAV,EAAkBD,MAAMI,MAAN,CAAlB;AACD;AACD,SAAOH,MAAP;AACD,CApBU,CAAX;;kBAsBeH,I","file":"vendor/lodash/modularize/omit.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n"],"sourceRoot":"../../../../../../src/js"}