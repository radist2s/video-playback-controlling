{"version":3,"sources":["vendor/lodash/modularize/isSafeInteger.js"],"names":["MAX_SAFE_INTEGER","isSafeInteger","value"],"mappings":";;;;;;AAQA;;;;;;AAEA;AACA,IAAIA,mBAAmB,gBAAvB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAbA;;;;;;;;AAwCA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAC5B,SAAO,yBAAUA,KAAV,KAAoBA,SAAS,CAACF,gBAA9B,IAAkDE,SAASF,gBAAlE;AACD;;kBAEcC,a","file":"vendor/lodash/modularize/isSafeInteger.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport isInteger from './isInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n * double precision number which isn't the result of a rounded unsafe integer.\n *\n * **Note:** This method is based on\n * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n * @example\n *\n * _.isSafeInteger(3);\n * // => true\n *\n * _.isSafeInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isSafeInteger(Infinity);\n * // => false\n *\n * _.isSafeInteger('3');\n * // => false\n */\nfunction isSafeInteger(value) {\n  return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isSafeInteger;\n"],"sourceRoot":"../../../../../../src/js"}