{"version":3,"sources":["vendor/lodash/modularize/flatMap.js"],"names":["flatMap","collection","iteratee"],"mappings":";;;;;;AAQA;;;;AACA;;;;;;AAEA;;;;;;;;;;;;;;;;;;;;;AAXA;;;;;;;;AAgCA,SAASA,OAAT,CAAiBC,UAAjB,EAA6BC,QAA7B,EAAuC;AACrC,SAAO,2BAAY,mBAAID,UAAJ,EAAgBC,QAAhB,CAAZ,EAAuC,CAAvC,CAAP;AACD;;kBAEcF,O","file":"vendor/lodash/modularize/flatMap.js","sourcesContent":["/**\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash category=\"collection,function,date,lang,object,string\" include=\"uniqueId\" modularize exports=\"es\"`\n * Copyright JS Foundation and other contributors <https://js.foundation/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n"],"sourceRoot":"../../../../../../src/js"}