{"version":3,"sources":["vendor/lodash/modularize/_createAggregator.js"],"names":["createAggregator","setter","initializer","collection","iteratee","func","arrayAggregator","baseAggregator","accumulator"],"mappings":";;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;;;;;;;;AAQA,SAASA,gBAAT,CAA0BC,MAA1B,EAAkCC,WAAlC,EAA+C;AAC7C,SAAO,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACpC,QAAIC,OAAO,uBAAQF,UAAR,IAAsBG,yBAAtB,GAAwCC,wBAAnD;AAAA,QACIC,cAAcN,cAAcA,aAAd,GAA8B,EADhD;;AAGA,WAAOG,KAAKF,UAAL,EAAiBF,MAAjB,EAAyB,4BAAaG,QAAb,EAAuB,CAAvB,CAAzB,EAAoDI,WAApD,CAAP;AACD,GALD;AAMD;;kBAEcR,gB","file":"vendor/lodash/modularize/_createAggregator.js","sourcesContent":["import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n"],"sourceRoot":"../../../../../../src/js"}